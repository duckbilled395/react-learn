{"version":3,"file":"static/js/828.5e9d3916.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/PostTextField.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","hoc/WithRouter.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__znDHK\"};","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '~~~'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               autoFocus={true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n// debugger\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || '~~~'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from'./ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"asd\"/>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n                {/*<div>{props.profile.aboutMe}</div>*/}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__8wxPH\",\"posts\":\"MyPosts_posts__rw3k-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__a7uII\"};","import React from \"react\";\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\" alt=\"post\" />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { useField, Field} from \"formik\";\r\n// import styles from './Login.module.css'\r\n\r\n\r\nexport const PostTextField= ({...props}) => {\r\n\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div >\r\n            <Field\r\n                   {...field} {...props}\r\n                   autoComplete='off'\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Form, Formik} from \"formik\";\r\nimport {PostTextField} from \"./Post/PostTextField\";\r\n\r\nfunction MyPosts(props) {\r\nconsole.log('render')\r\n// debugger;\r\n    let postsElements = props.posts\r\n        .map(post => <Post message={post.message} likesCount={post.likesCount} key={post.id}/>);\r\n\r\n    let onAddPost = (post) => {\r\n        props.addPost(post);\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{\r\n            post: ''\r\n        }}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    // console.log('values: ', values.post)\r\n                    onAddPost(values.post)\r\n                    resetForm();\r\n                }}\r\n        >\r\n            {(formik) => (\r\n                <Form className={styles.postsBlock}>\r\n                    <div>\r\n                        <PostTextField name='post' type='text'/>\r\n                        <div>\r\n                            <button type='submit'>Add post</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.posts}>\r\n                        {postsElements}\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-page-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n// // debugger;\r\n//     let state = props.store.getState();\r\n//\r\n//     let onAddPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostActionCreator(text)\r\n//         props.store.dispatch(action);\r\n//     }\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={onAddPost}\r\n//                  posts={state.profilePage.postsData}\r\n//                  newPostText={state.profilePage.newPostText} />\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => {\r\n            dispatch(addPostActionCreator(post));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport {useMatch} from \"react-router-dom\";\r\n\r\n\r\nconst WithRouter = (Component) =>{\r\n    let RouterComponent = (props) => {\r\n\r\n        let match = useMatch('/profile/:userId/');\r\n        if (!match) {\r\n            match = {\r\n                params: {\r\n                    userId: props.authorizedUserId\r\n                }\r\n            }\r\n        }\r\n        return <Component {...props} match={match}/>;\r\n    }\r\n    return RouterComponent;\r\n}\r\nexport default WithRouter;","import React from \"react\";\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileMatch from \"../../hoc/WithRouter\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n            {/*<ProfileMatch />*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport styles from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-page-reducer\";\r\nimport WithRouter from \"../../hoc/WithRouter\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUsersProfile,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    WithRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login/'} />\r\n        return <Component {...props} />\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let ConnetctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)\r\n    (RedirectComponent);\r\n    return ConnetctedAuthRedirectComponent;\r\n}"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","profile","className","styles","src","photos","large","alt","Preloader","message","likesCount","PostTextField","useField","field","autoComplete","console","log","postsElements","posts","map","post","id","initialValues","onSubmit","values","resetForm","addPost","formik","name","type","connect","state","profilePage","postsData","newPostText","dispatch","addPostActionCreator","MyPosts","Component","match","useMatch","params","userId","authorizedUserId","ProfileContainer","this","getUsersProfile","getStatus","compose","auth","isAuth","WithRouter","withAuthRedirect","to"],"sourceRoot":""}