{"version":3,"file":"static/js/883.ef9d6e55.chunk.js","mappings":"kLACA,EAAyB,2BAAzB,EAAkE,gCAAlE,EAA2G,2BAA3G,EAAoJ,gC,SCWpJ,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,iBAAKC,UAAWC,EAAhB,WACH,gBAAKD,UAAWC,EAAhB,UAA+B,gBAAKD,UAAWC,EAAoBC,IAAKL,EAAMM,OAAQC,IAAI,WAC1F,SAAC,KAAD,CAASC,GAAIP,EAAME,UAAWC,EAA9B,SAAmDJ,EAAMS,WCPjE,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAuN,yBAAvN,EAA2P,0BCA3P,EAA0B,yBCM1B,EAJgB,SAACT,GACb,OAAO,gBAAKG,UAAWC,EAAhB,SAAiCJ,EAAMU,W,6BCCrCC,EAAkB,SAAC,GAAgB,IAAZX,EAAW,oBAE3C,GAAsBY,EAAAA,EAAAA,IAASZ,GAA/B,eAAOa,EAAP,UAEA,OACI,0BACI,SAAC,MAAD,0BACWA,GAAWb,GADtB,IAEOc,aAAa,YCoChC,EA1CgB,SAACd,GAEb,IAAIe,EAAQf,EAAMgB,YAEdC,EAAkBF,EAAMG,YACvBC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYX,KAAMW,EAAOX,KAAMP,GAAIkB,EAAOlB,GAAoBI,OAAQc,EAAOd,QAA1Bc,EAAOlB,OAEzEmB,EAAmBN,EAAMO,aACxBH,KAAI,SAAAT,GAAO,OAAI,SAAC,EAAD,CAASP,UAAWC,EAAgBM,QAASA,EAAQA,SAAcA,EAAQR,OAM/F,OACI,SAAC,KAAD,CAAQqB,cAAe,CACnBb,QAAS,IAELc,SAAU,SAACC,EAAD,GAA0B,IARtBC,EAQMC,EAAe,EAAfA,UARND,EAUSD,EAT/BzB,EAAM4B,YAAYF,GAUNC,KANZ,SASK,SAACE,GAAD,OACG,SAAC,KAAD,WACI,iBAAK1B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKa,KAEL,iBAAKd,UAAWC,EAAhB,UACKiB,GACD,SAACV,EAAD,CAAkBF,KAAK,UAAUqB,KAAK,UACtC,mBAAQA,KAAK,SAAb,8B,mBC3B5B,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAKE,CAACY,YAAAA,EAAAA,IAC1BK,EAAAA,EAFJ,CAGEC,I,yGCZWD,EAAmB,SAACE,GAW7B,OAFsCH,EAAAA,EAAAA,KAJL,SAACjB,GAAD,MAAY,CACzCqB,OAAQrB,EAAMsB,KAAKD,UAGeJ,EARd,SAAChC,GACrB,OAAKA,EAAMoC,QACJ,SAACD,GAAD,UAAenC,KADI,SAAC,KAAD,CAAUQ,GAAI","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsTextField.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__5jSd2\",\"dialogInner\":\"DialogItem_dialogInner__T2Ah9\",\"avatar\":\"DialogItem_avatar__-tV0E\",\"avatarInner\":\"DialogItem_avatarInner__kqhpk\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={styles.dialog}>\r\n        <div className={styles.avatar}><img className={styles.avatarInner} src={props.avatar} alt=\"123\" /></div>\r\n        <NavLink to={path} className={styles.dialogInner}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__wpLe4\",\"dialogsItems\":\"Dialogs_dialogsItems__sM9Nl\",\"dialog\":\"Dialogs_dialog__lhawI\",\"dialogInner\":\"Dialogs_dialogInner__ib+i3\",\"active\":\"Dialogs_active__7sDeF\",\"message\":\"Dialogs_message__g06QS\",\"messages\":\"Dialogs_messages__3cNsg\",\"right\":\"Dialogs_right__TDSsg\",\"left\":\"Dialogs_left__n9Arb\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__waP4H\",\"right\":\"Message_right__0kUjL\",\"left\":\"Message_left__zopXU\"};","import React from \"react\";\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={styles.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { useField, Field} from \"formik\";\r\n// import styles from './Login.module.css'\r\n\r\n\r\nexport const DialogsTextField= ({...props}) => {\r\n\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <div >\r\n            <Field\r\n                   {...field} {...props}\r\n                   autoComplete='off'\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport styles from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {Formik, Form} from \"formik\";\r\nimport {DialogsTextField} from \"./DialogsTextField\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} avatar={dialog.avatar}/>);\r\n\r\n    let messagesElements = state.messagesData\r\n        .map(message => <Message className={styles.message} message={message.message} key={message.id}/>);\r\n\r\n    let onSendMessageClick = (newMessage) => {\r\n        props.sendMessage(newMessage);\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{\r\n            message: ''\r\n        }}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    // console.log('values: ', values.message)\r\n                    onSendMessageClick(values)\r\n                    resetForm();\r\n                }}\r\n        >\r\n            {(formik) => (\r\n                <Form>\r\n                    <div className={styles.dialogs}>\r\n                        <div className={styles.dialogsItems}>\r\n                            {dialogsElements}\r\n                        </div>\r\n                        <div className={styles.messages}>\r\n                            {messagesElements}\r\n                            <DialogsTextField name='message' type='text' />\r\n                            <button type='submit'>Send</button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-page-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)","import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login/'} />\r\n        return <Component {...props} />\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    let ConnetctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)\r\n    (RedirectComponent);\r\n    return ConnetctedAuthRedirectComponent;\r\n}"],"names":["props","path","id","className","styles","src","avatar","alt","to","name","message","DialogsTextField","useField","field","autoComplete","state","dialogsPage","dialogsElements","dialogsData","map","dialog","messagesElements","messagesData","initialValues","onSubmit","values","newMessage","resetForm","sendMessage","formik","type","compose","connect","withAuthRedirect","Dialogs","Component","isAuth","auth"],"sourceRoot":""}